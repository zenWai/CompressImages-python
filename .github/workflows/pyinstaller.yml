on:
  push:
    tags:
      - 'v*'
jobs:
  build:
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      - name: Extract version tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - run: pip install -r requirements.txt
      - name: Install Certificate
        run: |
          echo "${{ secrets.CERTIFICATE_BASE64 }}" | base64 --decode -o certificate.p12
          security create-keychain -p "temp_password" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "temp_password" build.keychain
          security import certificate.p12 -k build.keychain -P ${{ secrets.CERTIFICATE_PASSWORD }} -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k "temp_password" build.keychain
      - name: Decode API Key
        run: |
          echo "${{ secrets.API_KEY }}" | base64 --decode -o ./AuthKey.p8
      - name: Prepare Notary
        run: |
          xcrun notarytool store-credentials "GitHubActions" --key ./AuthKey.p8 --key-id ${{ secrets.API_KEY_ID }} --issuer ${{ secrets.ISSUER_ID }}
      - name: Prepare .spec File
        run: |
          sed -i '' "s/SECRET_DEVELOPER_ID/${{ secrets.DEVELOPER_ID }}/" SmartImageShrink_v0.6.spec
      - name: Bundle APP
        run: pyinstaller SmartImageShrink_v0.6.spec
      - name: Set Executable Permissions
        run: chmod +x dist/SmartImageShrink_v0.6.app/Contents/MacOS/SmartImageShrink_v0.6
      - name: Zip the App for Notarization
        run: |
          zip -r -y -p SmartImageShrink_v0.6.app.zip dist/SmartImageShrink_v0.6.app
      - name: Notarize
        run: |
          xcrun notarytool submit SmartImageShrink_v0.6.app.zip --keychain-profile "GitHubActions" --wait
      - name: Staple the App
        run: xcrun stapler staple dist/SmartImageShrink_v0.6.app
      - name: check
        run: spctl -a -t exec -vv dist/SmartImageShrink_v0.6.app
      - name: Prepare Tar Directory with name of the app
        run: |
          mkdir -p SmartImageShrink
          cp -R dist/SmartImageShrink_v0.6.app SmartImageShrink/
      - name: Check permissions
        run: ls -l SmartImageShrink/SmartImageShrink_v0.6.app/Contents/MacOS/*
      - name: Tar the application to preserve permissions
        run: tar -cvf SmartImageShrink_v0.6.app.tar SmartImageShrink
      - name: Upload Tarred App as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: SmartImageShrink_${{ env.VERSION }}
          path: SmartImageShrink_v0.6.app.tar